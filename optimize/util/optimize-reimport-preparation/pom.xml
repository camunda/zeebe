<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.camunda.optimize</groupId>
    <artifactId>util</artifactId>
    <version>8.6.0-alpha3-SNAPSHOT</version>
  </parent>

  <artifactId>optimize-reimport-preparation</artifactId>
  <version>8.6.0-alpha3-SNAPSHOT</version>

  <properties>
    <skipTests>false</skipTests>
  </properties>

  <dependencies>

    <!-- Optimize dependencies -->
    <dependency>
      <groupId>io.camunda.optimize</groupId>
      <artifactId>optimize-backend</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Test dependencies-->
    <dependency>
      <groupId>io.camunda.optimize</groupId>
      <artifactId>optimize-backend</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-test</artifactId>
      <version>${spring.boot.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-valid-test-plugins</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>io.camunda.optimize</groupId>
                  <artifactId>optimize-main-test-plugin</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/testPluginsValid</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>io.camunda.optimize</groupId>
            <artifactId>optimize-main-test-plugin</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>it</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>docker-start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <skip>${skip.docker}</skip>
                  <executable>mvn</executable>
                  <workingDirectory>../../</workingDirectory>
                  <arguments>
                    <argument>-f</argument>
                    <argument>optimize/backend/pom.xml</argument>
                    <argument>-Pit</argument>
                    <argument>pre-integration-test</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>docker-remove</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <skip>${skip.docker}</skip>
                  <executable>docker-compose</executable>
                  <workingDirectory>../../</workingDirectory>
                  <arguments>
                    <argument>-f</argument>
                    <argument>${docker.compose.file}</argument>
                    <argument>rm</argument>
                    <argument>-sfv</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven3-plugin</artifactId>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>redeploy</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <skip>${skipTests}</skip>
              <!-- Container configuration -->
              <container>
                <type>remote</type>
                <containerId>tomcat9x</containerId>
              </container>
              <configuration>
                <type>runtime</type>
                <properties>
                  <cargo.remote.username>admin</cargo.remote.username>
                  <cargo.remote.password>admin</cargo.remote.password>
                  <cargo.servlet.port>8080</cargo.servlet.port>
                </properties>
              </configuration>
              <deployer>
                <type>remote</type>
              </deployer>
              <deployables>
                <deployable>
                  <groupId>io.camunda.optimize</groupId>
                  <artifactId>engine-it-plugin</artifactId>
                  <type>war</type>
                  <properties>
                    <context>engine-it-plugin</context>
                  </properties>
                </deployable>
              </deployables>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>io.camunda.optimize</groupId>
          <artifactId>engine-it-plugin</artifactId>
          <scope>test</scope>
          <type>war</type>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>

/*
 * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under
 * one or more contributor license agreements. See the NOTICE file distributed
 * with this work for additional information regarding copyright ownership.
 * Licensed under the Camunda License 1.0. You may not use this file
 * except in compliance with the Camunda License 1.0.
 */
// TODO recreate C8 IT equivalent of this with #13337
// // TODO recreate C8 IT equivalent of this with #13337
// // // TODO recreate C8 IT equivalent of this with #13337
// // // package io.camunda.optimize.rest.eventprocess.autogeneration;
// // //
// // // import static io.camunda.optimize.AbstractIT.OPENSEARCH_PASSING;
// // // import static
// io.camunda.optimize.test.optimize.EventProcessClient.createExternalEventAllGroupsSourceEntry;
// // // import static
// io.camunda.optimize.test.optimize.EventProcessClient.createExternalEventSourceEntryForGroup;
// // // import static
// io.camunda.optimize.test.optimize.EventProcessClient.createSimpleCamundaEventSourceEntry;
// // // import static org.assertj.core.api.Assertions.assertThat;
// // //
// // // import io.camunda.optimize.dto.optimize.query.event.process.EventProcessState;
// // // import
// io.camunda.optimize.dto.optimize.query.event.process.source.CamundaEventSourceEntryDto;
// // // import io.camunda.optimize.dto.optimize.query.event.process.source.EventScopeType;
// // // import io.camunda.optimize.dto.optimize.query.event.process.source.EventSourceEntryDto;
// // // import
// io.camunda.optimize.dto.optimize.query.event.process.source.ExternalEventSourceEntryDto;
// // // import io.camunda.optimize.dto.optimize.rest.EventProcessMappingCreateRequestDto;
// // // import io.camunda.optimize.dto.optimize.rest.event.EventProcessMappingResponseDto;
// // // import io.camunda.optimize.rest.engine.dto.ProcessInstanceEngineDto;
// // // import jakarta.ws.rs.core.Response;
// // // import java.util.Arrays;
// // // import java.util.Collections;
// // // import java.util.List;
// // // import java.util.stream.Stream;
// // // import org.junit.jupiter.api.Tag;
// // // import org.junit.jupiter.api.Test;
// // // import org.junit.jupiter.params.ParameterizedTest;
// // // import org.junit.jupiter.params.provider.MethodSource;
// // //
// // // @Tag(OPENSEARCH_PASSING)
// // // public class EventBasedProcessAutogenerationRestServiceIT
// // //     extends AbstractEventProcessAutogenerationIT {
// // //
// // //   @Test
// // //   public void createAutogeneratedProcess_notAuthorized() {
// // //     // given
// // //     embeddedOptimizeExtension
// // //         .getConfigurationService()
// // //         .getEventBasedProcessConfiguration()
// // //         .getAuthorizedUserIds()
// // //         .clear();
// // //
// // //     // when
// // //     Response response =
// // //         embeddedOptimizeExtension
// // //             .getRequestExecutor()
// // //             .buildCreateEventProcessMappingRequest(null)
// // //             .execute();
// // //
// // //     // then
// // //     assertThat(response.getStatus()).isEqualTo(Response.Status.FORBIDDEN.getStatusCode());
// // //   }
// // //
// // //   @Test
// // //   public void createAutogeneratedProcess_noEventSource() {
// // //     // given
// // //     final EventProcessMappingCreateRequestDto createRequestDto =
// // //         buildAutogenerateCreateRequestDto(Collections.emptyList());
// // //
// // //     // when
// // //     Response response =
// // //         embeddedOptimizeExtension
// // //             .getRequestExecutor()
// // //             .buildCreateEventProcessMappingRequest(createRequestDto)
// // //             .execute();
// // //
// // //     // then
// // //
// assertThat(response.getStatus()).isEqualTo(Response.Status.BAD_REQUEST.getStatusCode());
// // //   }
// // //
// // //   @Test
// // //   public void createAutogeneratedProcess_externalEventSource() {
// // //     // given
// // //     enableProcessingAndTriggerStateTraceProcessing();
// // //     final List<EventSourceEntryDto<?>> externalSource =
// // //         Collections.singletonList(createExternalEventAllGroupsSourceEntry());
// // //     final EventProcessMappingCreateRequestDto createRequestDto =
// // //         buildAutogenerateCreateRequestDto(externalSource);
// // //
// // //     // when
// // //     final EventProcessMappingResponseDto eventProcessMapping =
// // //         autogenerateProcessAndGetMappingResponse(createRequestDto);
// // //
// // //     // then
// // //     assertProcessMappingConfiguration(
// // //         eventProcessMapping, externalSource, EventProcessState.UNMAPPED);
// // //   }
// // //
// // //   private static final Stream<List<EventSourceEntryDto<?>>>
// // //       invalidExternalEventSourceAutogenerationCombinations() {
// // //     return Stream.concat(
// // //         invalidExternalEventSourceCombinations(),
// // //         Stream.of(
// // //
// Collections.singletonList(createExternalEventSourceEntryForGroup("singleGroup")),
// // //             Arrays.asList(
// // //                 createExternalEventSourceEntryForGroup("groupA"),
// // //                 createExternalEventSourceEntryForGroup("groupB"))));
// // //   }
// // //
// // //   @ParameterizedTest
// // //   @MethodSource("invalidExternalEventSourceAutogenerationCombinations")
// // //   public void createAutogeneratedProcess_invalidExternalEventSourceCombinations(
// // //       final List<EventSourceEntryDto<?>> sources) {
// // //     // given
// // //     enableProcessingAndTriggerStateTraceProcessing();
// // //     final EventProcessMappingCreateRequestDto createRequestDto =
// // //         buildAutogenerateCreateRequestDto(sources);
// // //
// // //     // when
// // //     Response response =
// // //         embeddedOptimizeExtension
// // //             .getRequestExecutor()
// // //             .buildCreateEventProcessMappingRequest(createRequestDto)
// // //             .execute();
// // //
// // //     // then
// // //
// assertThat(response.getStatus()).isEqualTo(Response.Status.BAD_REQUEST.getStatusCode());
// // //   }
// // //
// // //   @Test
// // //   public void createAutogeneratedProcess_externalEventSource_eventImportDisabled() {
// // //     // given
// // //     embeddedOptimizeExtension
// // //         .getConfigurationService()
// // //         .getEventBasedProcessConfiguration()
// // //         .getEventImport()
// // //         .setEnabled(false);
// // //     final List<EventSourceEntryDto<?>> externalSource =
// // //         Collections.singletonList(createExternalEventAllGroupsSourceEntry());
// // //     final EventProcessMappingCreateRequestDto createRequestDto =
// // //         buildAutogenerateCreateRequestDto(externalSource);
// // //
// // //     // when
// // //     final Response response =
// // //         embeddedOptimizeExtension
// // //             .getRequestExecutor()
// // //             .buildCreateEventProcessMappingRequest(createRequestDto)
// // //             .execute();
// // //
// // //     // then
// // //
// assertThat(response.getStatus()).isEqualTo(Response.Status.BAD_REQUEST.getStatusCode());
// // //   }
// // //
// // //   @Test
// // //   public void createAutogeneratedProcess_camundaEventSource() {
// // //     // given
// // //     final List<EventSourceEntryDto<?>> camundaSource =
// // //         Collections.singletonList(deployAndStartEngineInstanceAndCreateEventSource());
// // //     final EventProcessMappingCreateRequestDto createRequestDto =
// // //         buildAutogenerateCreateRequestDto(camundaSource);
// // //
// // //     // when
// // //     final EventProcessMappingResponseDto eventProcessMapping =
// // //         autogenerateProcessAndGetMappingResponse(createRequestDto);
// // //
// // //     // then
// // //     assertProcessMappingConfiguration(eventProcessMapping, camundaSource,
// EventProcessState.MAPPED);
// // //   }
// // //
// // //   @Test
// // //   public void createAutogeneratedProcess_camundaEventSourceImportNotEnabled() {
// // //     // given
// // //     embeddedOptimizeExtension.getDefaultEngineConfiguration().setEventImportEnabled(false);
// // //     final List<EventSourceEntryDto<?>> camundaSource =
// // //         Collections.singletonList(deployAndStartEngineInstanceAndCreateEventSource());
// // //     final EventProcessMappingCreateRequestDto createRequestDto =
// // //         buildAutogenerateCreateRequestDto(camundaSource);
// // //
// // //     // when
// // //     final Response response =
// // //
// eventProcessClient.createCreateEventProcessMappingRequest(createRequestDto).execute();
// // //
// // //     // then
// // //
// assertThat(response.getStatus()).isEqualTo(Response.Status.BAD_REQUEST.getStatusCode());
// // //   }
// // //
// // //   @Test
// // //   public void createAutogeneratedProcess_multipleCamundaEventSources() {
// // //     // given
// // //     final List<EventSourceEntryDto<?>> eventSources =
// // //         Arrays.asList(
// // //             deployAndStartEngineInstanceAndCreateEventSource(),
// // //             deployAndStartEngineInstanceAndCreateEventSource());
// // //     final EventProcessMappingCreateRequestDto createRequestDto =
// // //         buildAutogenerateCreateRequestDto(eventSources);
// // //
// // //     // when
// // //     final EventProcessMappingResponseDto eventProcessMapping =
// // //         autogenerateProcessAndGetMappingResponse(createRequestDto);
// // //
// // //     // then
// // //     assertProcessMappingConfiguration(eventProcessMapping, eventSources,
// EventProcessState.MAPPED);
// // //   }
// // //
// // //   @ParameterizedTest
// // //   @MethodSource("invalidTracingVariables")
// // //   public void
// createAutogeneratedProcess_multipleCamundaEventSources_noTracingVariableProvided(
// // //       final String invalidVariable) {
// // //     // given
// // //     final CamundaEventSourceEntryDto sourceEntry =
// // //         createSimpleCamundaEventSourceEntry("someDefinitionKey");
// // //     sourceEntry.getConfiguration().setTracedByBusinessKey(false);
// // //     sourceEntry.getConfiguration().setTraceVariable(invalidVariable);
// // //     final List<EventSourceEntryDto<?>> eventSources =
// // //         Arrays.asList(sourceEntry, deployAndStartEngineInstanceAndCreateEventSource());
// // //
// // //     final EventProcessMappingCreateRequestDto createRequestDto =
// // //         buildAutogenerateCreateRequestDto(eventSources);
// // //
// // //     // when
// // //     final Response response =
// // //         embeddedOptimizeExtension
// // //             .getRequestExecutor()
// // //             .buildCreateEventProcessMappingRequest(createRequestDto)
// // //             .execute();
// // //
// // //     // then
// // //
// assertThat(response.getStatus()).isEqualTo(Response.Status.BAD_REQUEST.getStatusCode());
// // //   }
// // //
// // //   @Test
// // //   public void createAutogeneratedProcess_camundaAndExternalEventSources() {
// // //     // given
// // //     enableProcessingAndTriggerStateTraceProcessing();
// // //     final List<EventSourceEntryDto<?>> eventSources =
// // //         Arrays.asList(
// // //             deployAndStartEngineInstanceAndCreateEventSource(),
// // //             createExternalEventAllGroupsSourceEntry());
// // //     final EventProcessMappingCreateRequestDto createRequestDto =
// // //         buildAutogenerateCreateRequestDto(eventSources);
// // //
// // //     // when
// // //     final EventProcessMappingResponseDto eventProcessMapping =
// // //         autogenerateProcessAndGetMappingResponse(createRequestDto);
// // //
// // //     // then
// // //     assertProcessMappingConfiguration(eventProcessMapping, eventSources,
// EventProcessState.MAPPED);
// // //   }
// // //
// // //   @Test
// // //   public void createAutogeneratedProcess_invalidExternalEventSourceScope() {
// // //     // given
// // //     final ExternalEventSourceEntryDto externalSource =
// createExternalEventAllGroupsSourceEntry();
// // //     externalSource
// // //         .getConfiguration()
// // //         .setEventScope(Collections.singletonList(EventScopeType.PROCESS_INSTANCE));
// // //     final EventProcessMappingCreateRequestDto createRequestDto =
// // //         buildAutogenerateCreateRequestDto(Collections.singletonList(externalSource));
// // //
// // //     // when
// // //     final Response response =
// // //         embeddedOptimizeExtension
// // //             .getRequestExecutor()
// // //             .buildCreateEventProcessMappingRequest(createRequestDto)
// // //             .execute();
// // //
// // //     // then
// // //
// assertThat(response.getStatus()).isEqualTo(Response.Status.BAD_REQUEST.getStatusCode());
// // //   }
// // //
// // //   @Test
// // //   public void createAutogeneratedProcess_invalidCamundaEventSourceScope() {
// // //     // given
// // //     final CamundaEventSourceEntryDto camundaSource =
// // //         deployAndStartEngineInstanceAndCreateEventSource();
// // //
// camundaSource.getConfiguration().setEventScope(Collections.singletonList(EventScopeType.ALL));
// // //     final EventProcessMappingCreateRequestDto createRequestDto =
// // //         buildAutogenerateCreateRequestDto(Collections.singletonList(camundaSource));
// // //
// // //     // when
// // //     final Response response =
// // //         embeddedOptimizeExtension
// // //             .getRequestExecutor()
// // //             .buildCreateEventProcessMappingRequest(createRequestDto)
// // //             .execute();
// // //
// // //     // then
// // //
// assertThat(response.getStatus()).isEqualTo(Response.Status.BAD_REQUEST.getStatusCode());
// // //   }
// // //
// // //   private CamundaEventSourceEntryDto deployAndStartEngineInstanceAndCreateEventSource() {
// // //     final ProcessInstanceEngineDto processInstanceEngineDto =
// // //         deployAndStartProcessWithVariables(Collections.emptyMap());
// // //     importEngineEntities();
// // //     return createCamundaSourceEntry(
// // //         processInstanceEngineDto.getProcessDefinitionKey(),
// EventScopeType.PROCESS_INSTANCE);
// // //   }
// // //
// // //   private void enableProcessingAndTriggerStateTraceProcessing() {
// // //     embeddedOptimizeExtension
// // //         .getConfigurationService()
// // //         .getEventBasedProcessConfiguration()
// // //         .getEventImport()
// // //         .setEnabled(true);
// // //     processEventCountAndTraces();
// // //   }
// // //
// // //   private static Stream<String> invalidTracingVariables() {
// // //     return Stream.of(null, "");
// // //   }
// // // }

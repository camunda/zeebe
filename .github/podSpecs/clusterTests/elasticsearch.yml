---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: ${NAMESPACE}
  labels:
    app: elasticsearch
    team: optimize
spec:
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: agents-n1-standard-8-netssd-stable
      tolerations:
        - key: "agents-n1-standard-8-netssd-stable"
          operator: "Exists"
          effect: "NoSchedule"
      initContainers:
        - name: init-sysctl
          image: busybox
          imagePullPolicy: Always
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
          securityContext:
            privileged: true
            capabilities:
              add: ["IPC_LOCK"]
          livenessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: http
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: http
            initialDelaySeconds: 60
          env:
            - name: ES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.type
              value: single-node
            - name: ES_JAVA_OPTS
              value: "-Xms1g -Xmx1g"
            - name: xpack.security.enabled
              value: "false"
          resources:
            limits:
              cpu: 4
              memory: 2Gi
            requests:
              cpu: 4
              memory: 2Gi
          ports:
            - containerPort: 9200
              name: http
              protocol: TCP

name: Optimize Engine Compatibility Tests with supported CamBPM

on:
  workflow_dispatch:
  schedule:
    - cron: 0 22 * * 1-5

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  engine-compatibility:
    name: Engine Compatibility Tests
    runs-on: gcp-core-16-default
    timeout-minutes: 90

    strategy:
      fail-fast: false
      matrix:
        cambpm: ["7.19", "7.20", "7.21"] #TODO: add the 'snapshot' option back when we find a solution for new engine DMN transform error and BPMN history ttl issues
        includedGroups:
          ["import,eventBasedProcess", "reportEvaluation", ""]
        include:
          - includedGroups: "import,eventBasedProcess"
            excludedGroups: ""
          - includedGroups: "reportEvaluation"
            excludedGroups: ""
          - includedGroups: ""
            excludedGroups: "ccsm-test,import,eventBasedProcess,reportEvaluation"

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Setup Maven
        uses: ./.github/actions/setup-maven
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Login to Harbor registry
        uses: ./.github/actions/login-registry
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Login to Google Cloud
        uses: ./.github/actions/login-gcloud
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Import secrets
        id: secrets
        uses: hashicorp/vault-action@d1720f055e0635fd932a1d2a48f87a666a57906c # v3.0.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/optimize/ci/camunda-optimize SLACK_BOT_URL;

      - name: "Read pom.xml file"
        id: "pom_info"
        uses: YunaBraska/java-info-action@main

      - name: Get engine property name
        if: ${{ matrix.cambpm != 'snapshot' }}
        run: |
          CAMBPM_VERSION=${{ matrix.cambpm }}
          echo "ENGINE_VERSION_PROP=x_project_profiles_profile_engine-${CAMBPM_VERSION//./_}_properties_camunda_engine_version" >> "$GITHUB_ENV"

      - name: Get engine snapshot version
        if: ${{ matrix.cambpm == 'snapshot' }}
        run: |
          sudo apt-get update -qq 
          sudo apt-get install -y libxml2-utils

          CAMBPM_SNAPSHOT_VERSION=$(./.github/scripts/get-engine-snapshot-version.sh)
          echo "Snapshot version found: $ENGINE_SNAPSHOT_VERSION"  

          echo "CAMBPM_SNAPSHOT_VERSION=${CAMBPM_SNAPSHOT_VERSION}" >> "$GITHUB_ENV"

      - name: Start Cambpm
        uses: ./.github/actions/compose
        with:
          compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.cambpm.yml
          project_name: cambpm
        env:
          CAMBPM_VERSION: ${{ matrix.cambpm == 'snapshot' && steps.pom_info.outputs[env.ENGINE_VERSION_PROP] || env.CAMBPM_SNAPSHOT_VERSION }}
          CAMBPM_JVM_MEMORY: 12

      - name: Start Elastic
        uses: ./.github/actions/compose
        with:
          compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch-secured.yml
          project_name: elasticsearch
        env:
          ELASTIC_VERSION: ${{ steps.pom_info.outputs.x_elasticsearch8_test_version }}
          ELASTIC_JVM_MEMORY: 12
          ELASTIC_HTTP_PORT: 9200

      - name: IT ${{ matrix.includedGroups }}${{ matrix.excludedGroups }} - ES ${{ steps.pom_info.outputs.x_elasticsearch8_test_version }}, CamBPM ${{ matrix.cambpm }}
        if: always()
        uses: ./.github/actions/run-maven
        env:
          LIMITS_CPU: 8
        with:
          threads: 8
          parameters: verify -Dfailsafe.rerunFailingTestsCount=2 -Dit.test.includedGroups=${{ matrix.includedGroups }} -Dit.test.excludedGroups=${{ matrix.excludedGroups }} -Dskip.docker -Dskip.fe.build -Pit,engine-${{ matrix.cambpm }} -pl optimize/backend -am

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
        with:
          name: engine-compatibility-${{ matrix.cambpm }}-${{ matrix.includedGroups }}${{ matrix.excludedGroups }}-junit
          path: |
            **/failsafe-reports/**/*.xml
          retention-days: 7
          if-no-files-found: ignore

      - name: Docker log dump
        if: always()
        uses: ./.github/actions/docker-logs
        with:
          archive_name: engine-compatibility-${{ matrix.cambpm }}-${{ matrix.includedGroups }}${{ matrix.excludedGroups }}-docker

      - name: Post results on slack
        if: failure() && github.event_name != 'schedule'
        uses: ./.github/actions/notify-on-slack
        with:
          slack_webhook_url: ${{ steps.secrets.outputs.SLACK_BOT_URL}}
          status: ${{ job.status }}

  # Rerun failed jobs running on self-hosted runners in case of network issues or node preemption
  rerun-failed-jobs:
    needs:
      - engine-compatibility
    if: failure() && fromJSON(github.run_attempt) < 3
    runs-on: ubuntu-latest
    steps:
      - name: Retrigger job
        uses: camunda/infra-global-github-actions/rerun-failed-run@main
        with:
          error-messages: |
            lost communication with the server
            The runner has received a shutdown signal
          run-id: ${{ github.run_id }}
          repository: ${{ github.repository }}
          vault-addr: ${{ secrets.VAULT_ADDR }}
          vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
          vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}

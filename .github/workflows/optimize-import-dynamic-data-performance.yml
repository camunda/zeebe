name: Optimize Import Dynamic Dataset Performance Test

on:
  workflow_dispatch:
    inputs:
      es_version:
        description: Elasticsearch version to use (defaults to pom.xml version)
        required: false
        default: ""
      cambpm_version:
        description: Cambpm version to use (defaults to pom.xml version)
        required: false
        default: ""
      postgres_version:
        description: Postgres version to use
        required: false
        default: "15.4"

  schedule:
    - cron: 0 0 * * 1-5

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  import-dynamic-dataset-performance:
    name: Import Dynamic Dataset Performance Test
    runs-on: gcp-core-16-default
    timeout-minutes: 90

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Import secrets
        id: secrets
        uses: hashicorp/vault-action@d1720f055e0635fd932a1d2a48f87a666a57906c # v3.0.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/optimize/ci/camunda-optimize SLACK_BOT_URL;

      - name: Setup Maven
        uses: ./.github/actions/setup-maven
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Login to Harbor registry
        uses: ./.github/actions/login-registry
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Read pom.xml file
        id: pom-info
        uses: YunaBraska/java-info-action@main

      - name: Start Postgress
        uses: ./.github/actions/compose
        with:
          compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.postgresql.yml
          project_name: postgres
        env:
          POSTGRES_VERSION: ${{ inputs.postgres_version || '' }}
          POSTGRES_CPUS: 4

      - name: Start Cambpm
        uses: ./.github/actions/compose
        with:
          compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.cambpm-dbdriver.yml
          project_name: cambpm
        env:
          CAMBPM_VERSION: ${{ inputs.cambpm_version || steps.pom-info.outputs.x_camunda_engine_version }}
          CAMBPM_JVM_MEMORY: 6

      - name: Start Elastic
        uses: ./.github/actions/compose
        with:
          compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch-ipclock.yml
          project_name: elasticsearch-new
        env:
          ELASTIC_VERSION: ${{ inputs.es_version || steps.pom-info.outputs.x_elasticsearch_test_version }}
          ELASTIC_JVM_MEMORY: 12
          ELASTIC_HTTP_PORT: 9200

      - name: Build
        uses: ./.github/actions/run-maven
        with:
          parameters: -pl optimize/backend,optimize/qa/data-generation -am -DskipTests -Dskip.fe.build -Dskip.docker clean install -B

      - name: Run tests
        uses: ./.github/actions/run-maven
        with:
          parameters: -Plive-data-import-performance-test -f optimize/qa/import-performance-tests/pom.xml clean test -B

      - name: Pull Indices
        run: |
          curl localhost:9200/_cat/indices?v

      - name: Docker log dump
        uses: ./.github/actions/docker-logs
        if: always()
        with:
          archive_name: migration-docker

      - name: Post results on slack
        if: failure() && github.event_name != 'schedule'
        uses: ./.github/actions/notify-on-slack
        with:
          slack_webhook_url: ${{ steps.secrets.outputs.SLACK_BOT_URL}}
          status: ${{ job.status }}

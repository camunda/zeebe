name: Optimize Trivy check docker image

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * 1-5"

permissions:
  contents: read
  id-token: write

# Will limit the workflow to 1 concurrent run per ref (branch / PR)
# If a new commits occurs, the current run will be canceled
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  trivy-check:
    name: Run trivy check
    strategy:
      fail-fast: false
      matrix:
        branch:
          [
            "master",
            "maintenance/3.13",
            "maintenance/3.12",
            "maintenance/3.11",
            "maintenance/3.10"
          ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        with:
          ref: ${{ matrix.branch }}

      - name: "Read Java Info"
        id: "pom-info"
        uses: YunaBraska/java-info-action@main

      - name: Setup Maven
        uses: ./.github/actions/setup-maven
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Checkout code 2 # we do it cause setup maven step does the checkout to current branch
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        with:
          ref: ${{ matrix.branch}}

      - name: Build a package
        uses: ./.github/actions/run-maven
        with:
          parameters: clean install -DskipTests -Dskip.docker

      - name: Expose common variables as Env
        run: |
          {
            echo "PUSH_LATEST_TAG=false"
            echo "IS_MAIN=false"
            echo "CI=false"
            BRANCH=${{ matrix.branch }}
            echo "DOCKER_BRANCH_TAG=${BRANCH//\//-}"
            echo "DOCKER_IMAGE_TEAM=optimize/test"
            echo "DOCKER_TAG=latest"
            echo "VERSION=${{ steps.pom-info.outputs.project_version }}"
            echo "REVISION=${{ github.sha }}"
          } >> "$GITHUB_ENV"

      - name: Import secrets
        id: secrets
        uses: hashicorp/vault-action@148ee648ccb26f28892776406f3c3c4cf8ac033f
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/optimize/ci/camunda-optimize REGISTRY_HUB_DOCKER_COM_USR;
            secret/data/products/optimize/ci/camunda-optimize REGISTRY_HUB_DOCKER_COM_PSW;

      - name: Login to Harbor registry
        uses: ./.github/actions/login-registry
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Login to Harbor docker registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          username: ${{ steps.secrets.outputs.REGISTRY_HUB_DOCKER_COM_USR }}
          password: ${{ steps.secrets.outputs.REGISTRY_HUB_DOCKER_COM_PSW }}

      - name: Build local image for testing
        run: ./.github/scripts/build-docker-image.sh

      - name: Get image id
        run: |
          images=$(docker image ls -q)

          for image in ${images[@]}; do
              if [[ $(docker inspect $image | grep org.opencontainers.image.title) =~ "Camunda Optimize" ]]; then
                  echo "imageId=$image" >> "$GITHUB_ENV"
              fi
          done

          echo $imageId

      - name: Run Trivy vulnerability scanner
        if: always()
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.imageId }}
          exit-code: "1"
          ignore-unfixed: true
          hide-progress: true
          severity: "CRITICAL,HIGH"
          format: table
          output: ${{ steps.pom-info.outputs.project_version }}-trivy-log.txt
          trivyignores: ".github/workflows/.trivyignore"

      - name: Print Test Results
        if: always()
        run: |
          echo "${{ steps.pom-info.outputs.project_version }} Platform: AMD"
          cat ${{ steps.pom-info.outputs.project_version }}-trivy-log.txt

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
        with:
          name: trivy-test-results-${{ steps.pom-info.outputs.project_version }}
          path: |
            **/${{ steps.pom-info.outputs.project_version }}-trivy-log.txt
          retention-days: 7
          if-no-files-found: ignore

  post-results-on-slack:
    name: Post results on slack
    if: failure() && github.event_name != 'schedule'
    needs:
      - trivy-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Import secrets
        id: secrets
        uses: hashicorp/vault-action@148ee648ccb26f28892776406f3c3c4cf8ac033f
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/optimize/ci/camunda-optimize SLACK_BOT_URL;

      - name: Post results on slack
        uses: ./.github/actions/notify-on-slack
        with:
          slack_webhook_url: ${{ steps.secrets.outputs.SLACK_BOT_URL}}
